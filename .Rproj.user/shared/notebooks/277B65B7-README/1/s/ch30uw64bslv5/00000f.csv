"0",""
"0","# Convertir targetL a character para evitar problemas al combinar dataframes"
"0","positions_accuracy <- positions_accuracy %>%"
"0","  mutate(targetL = as.character(targetL))"
"0",""
"0","# Duplicar y modificar el dataframe para crear 'positions_general'"
"0","positions_general <- positions_accuracy %>%"
"0","  mutate(targetL = ""General"")"
"0",""
"0","# Combinar ambos dataframes"
"0","positions <- bind_rows(positions_accuracy, positions_general)"
"0",""
"0","# Especificar manualmente los niveles en el orden deseado"
"0","desired_levels <- c(""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"", ""10"", ""11"", ""12"","
"0","                    ""13"", ""14"", ""15"", ""17"", ""21"", ""22"", ""24"", ""48"", ""General"")"
"0",""
"0","# Convertir correct_pos a numérico y ordenar targetL como factor según desired_levels"
"0","positions <- positions %>%"
"0","  mutate(correct_pos = as.numeric(correct_pos),"
"0","         targetL = factor(targetL, levels = desired_levels)) %>%"
"0","  arrange(correct_pos, targetL)"
"0",""
"0","# Definir un conjunto de linetypes que se pueda repetir"
"0","custom_linetypes <- rep(c(""solid"", ""dashed"", ""dotted"", ""longdash"", ""dotdash""),"
"0","                        length.out = nlevels(positions$targetL))"
"0",""
"0","# Calcular la precisión y contar el número de observaciones por grupo"
"0","plot_positions <- positions %>%"
"0","  group_by(Position, targetL) %>%"
"0","  summarize(acc = mean(correct_pos, na.rm = TRUE),"
"0","            n = n()) %>%"
"0","  ggplot(aes(x = as.numeric(Position), y = acc, group = targetL,"
"0","             fill = targetL, color = targetL, lty = targetL)) +"
"0","  geom_line(size = 0.70, alpha = 0.6) +"
"0","  geom_point(aes(size = n), shape = 21, color = ""black"", alpha = 0.6) +"
"0","  scale_linetype_manual(values = custom_linetypes) +"
"0","  theme(panel.border = element_rect(colour = ""black"", fill = NA),"
"0","        panel.background = element_blank(),"
"0","        panel.grid.major = element_blank(),"
"0","        panel.grid.minor = element_blank(),"
"0","        axis.line = element_blank()) +"
"0","  ylab(""Proportion (%) of correct phonemes"") +"
"0","  xlab(""Phoneme position"") +"
"0","  guides(fill = guide_legend(title = ""Word Length""),"
"0","         lty = guide_legend(title = ""Word Length""),"
"0","         color = guide_legend(title = ""Word Length""),"
"0","         size = guide_legend(title = ""Datapoints"")) + "
"0","  theme_gray() +"
"0","  theme(legend.position = ""right"","
"0","        legend.key.size = unit(0.6, ""lines""))"
"2","`summarise()` has grouped output by 'Position'. You can override using the `.groups` argument."
