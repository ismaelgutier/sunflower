% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_lexicality.R
\name{check_lexicality}
\alias{check_lexicality}
\title{Lexicality Classification of Responses Based on Frequency or Dictionary Presence}
\usage{
check_lexicality(
  dataframe,
  criterion = "database",
  item_col = "item",
  response_col = "response"
)
}
\arguments{
\item{dataframe}{A data frame containing the response data to be classified.}

\item{criterion}{A string specifying the lexicality criterion to be used. Acceptable values are:
- "database": Uses a frequency-based approach, comparing word frequencies.
- "dictionary": Checks if the word exists in a predefined wordlist.
The default is "database".}

\item{item_col}{A string specifying the name of the column containing the target word for frequency comparison (default is "item").}

\item{response_col}{A string specifying the name of the column containing the response word to be classified (default is "response").}
}
\value{
A data frame with an additional column `lexicality`, where:
  - `1`: The response is lexically valid (based on the criterion).
  - `0`: The response is non-lexical.
}
\description{
This function classifies responses in a dataframe by comparing them to a predefined set of lexical items. Depending on the criterion selected, it either checks the frequency of the response words against a database or verifies the presence of the words in a dictionary list. The function adds a column to the dataframe indicating whether the response word is lexically appropriate based on the selected criterion.
}
\details{
The function processes the dataframe by comparing each row's response word to a reference list. Two methods are available:

1. **Database (Frequency-Based Approach)**:
   - The function compares the log-transformed frequency of the response word with that of the target word from a frequency database (`BPAL_freq`). If the response word has a frequency equal to or greater than the target word, the function classifies it as lexical.

2. **Dictionary (Presence-Based Approach)**:
   - The function checks if the response word exists in a predefined dictionary list (`RAE_wordlist`). If the response word is found, it is classified as lexical.

A new column, `lexicality`, is added to the dataframe with binary values:
- `1` if the response is lexically appropriate (based on the selected criterion),
- `0` otherwise.

If the word is not found in the frequency database or the dictionary, it is marked as non-lexical (0).
}
\examples{
# Example usage:
df <- data.frame(item = c("dog", "cat"), response = c("dog", "bat"))
check_lexicality(df, criterion = "database")

# Using dictionary-based criterion
check_lexicality(df, criterion = "dictionary")
}
